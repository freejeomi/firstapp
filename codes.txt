## this is the first feed code
import feedparser

from flask import Flask

app = Flask(__name__)

BBC_FEED = "http://feeds.bbci.co.uk/news/rss.xml"

@app.route('/')
def get_news():
    feed = feedparser.parse(BBC_FEED)
    first_article = feed['entries'][0]
    return """<html>
    <body>
    <h1> BBC Headlines </h1>
    <b>{0}</b> <br/>
    <i>{1}</i> <br/>
    <p>{2}</p> <br/>
    </body>
    </html>""".format(first_article.get("title"), first_article.get("published"), first_article.get("summary"))
    pass



@app.route('/user/<name>')
def user(name):
    return '<h1>Hello, {}!</h1>'.format(name)


if __name__ == '__main__':
    app.run(debug=True, port=5000)

####### Another Feed Parser
import feedparser

from flask import Flask

app = Flask(__name__)

RSS_FEEDS = {'bbc': 'http://feeds.bbci.co.uk/news/rss.xml',
            'cnn': 'http://rss.cnn.com/rss/edition.rss',
            'fox': 'http://feeds.foxnews.com/foxnews/latest',
            'iol': 'http://www.iol.co.za/cmlink/1.640'}

# app route for default and bbc
@app.route("/")
@app.route("/<publication>")
def get_news(publication):
    return get_news(publication)
    # rest of code unchanged
    pass
# @app.route("/bbc")
# def bbc():
#     return get_news('bbc')
#
# # app route for cnn
# @app.route("/cnn")
# def cnn():
#     return get_news('cnn')

# function that calls CNN and BBC
def get_news(publication):
    feed = feedparser.parse(RSS_FEEDS[publication])
    first_article = feed['entries'][0]
    return """<html>
    <body>
    <h1>Headlines </h1>
    <b>{0}</b> </ br>
    <i>{1}</i> </ br>
    <p>{2}</p> </ br>
    </body>
    </html>""".format(first_article.get("title"), first_article.get("published"), first_article.get("summary"))

@app.route('/user/<name>')
def user(name):
    return '<h1>Hello, {}!</h1>'.format(name)


if __name__ == '__main__':
    app.run(debug=True, port=5000)

### latest feed parser
import feedparser

"""
The render_template function is the magic which takes a Jinja template as input
and produces pure HTML, capable of being read by any browser, as the output
"""
from flask import Flask

from flask import render_template

app = Flask(__name__)

RSS_FEEDS = {'hackernews': 'http://feeds.feedburner.com/TheHackersNews',
            'welivesecurity': 'http://feeds.feedburner.com/eset/blog',
            'krebsonsecurity': 'http://feeds.feedburner.com/krebsonsecurity.com/',
            'threatpost': 'http://feeds.feedburner.com/threatpost',
             'nakedsecurity':'http://feeds.feedburner.com/nakedsecurity'}

# app route for default and bbc
@app.route("/")
@app.route("/<publication>")
def publish_news(publication="hackernews"):
    return get_news(publication)
    # rest of code unchanged
    pass
# @app.route("/bbc")
# def bbc():
#     return get_news('bbc')
#
# # app route for cnn
# @app.route("/cnn")
# def cnn():
#     return get_news('cnn')

# function that calls CNN and BBC
def get_news(publication):
    feed = feedparser.parse(RSS_FEEDS[publication])
    first_article = feed['entries'][0]
    return """<html>
    <body>
    <h1>Headlines </h1>
    <b>{0}</b> </ br>
    <i>{1}</i> </ br>
    <p>{2}</p> </ br>
    </body>
    </html>""".format(first_article.get("title"), first_article.get("published"), first_article.get("summary"))

@app.route('/user/<name>')
def user(name):
    return '<h1>Hello, {}!</h1>'.format(name)


if __name__ == '__main__':
    app.run(debug=True, port=5000)

# new code from 15/02/2021
import feedparser

"""
The render_template function is the magic which takes a Jinja template as input
and produces pure HTML, capable of being read by any browser, as the output
"""
from flask import Flask

from flask import render_template

app = Flask(__name__)

RSS_FEEDS = {'hackernews': 'http://feeds.feedburner.com/TheHackersNews',
            'welivesecurity': 'http://feeds.feedburner.com/eset/blog',
            'krebsonsecurity': 'http://feeds.feedburner.com/krebsonsecurity.com/',
            'threatpost': 'http://feeds.feedburner.com/threatpost',
             'nakedsecurity':'http://feeds.feedburner.com/nakedsecurity'}

# app route for default and bbc
@app.route("/")
@app.route("/<publication>")
def publish_news(publication="hackernews"):
    return get_news(publication)
    # rest of code unchanged
    pass
# @app.route("/bbc")
# def bbc():
#     return get_news('bbc')
#
# # app route for cnn
# @app.route("/cnn")
# def cnn():
#     return get_news('cnn')

# function that calls CNN and BBC
def get_news(publication):
    feed = feedparser.parse(RSS_FEEDS[publication])
    #first_article = feed['entries'][0]
    return render_template("home.html",articles=feed['entries'])

@app.route('/user/<name>')
def user(name):
    return '<h1>Hello, {}!</h1>'.format(name)


if __name__ == '__main__':
    app.run(debug=True, port=5000)

